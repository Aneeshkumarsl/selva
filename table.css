.card-body{
  padding: 25px 50px;
  box-shadow: 0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23);
}
.search-box {
    width: 100%;
    padding-bottom: 12px;
    margin:auto;
  }
  .full-width{
    width: 100%;
  }
  .emp-table {
    font-family: "Trebuchet MS", Arial, Helvetica, sans-serif;
    border-collapse: collapse;
    width: 100%;
  }
  .emp-table td {
    border: 1px solid #ddd;
    padding: 8px;
  }
  .emp-table th {
    border: 1px solid #ddd;
    padding: 8px;
  }
  .emp-table tr:nth-child(even){background-color: #f2f2f2;}
  
  .emp-table tr:hover {background-color: #ddd;}
  
  .emp-table th {
    padding-top: 12px;
    padding-bottom: 12px;
    text-align: left;
    background-color: #4CAF50;
    color: white;
  }

  .text-input {
    position: relative;
    margin-top: 10px;
  }
  .text-input input[type="text"] {
    display: inline-block;
    width: 500px;
    height: 40px;
    box-sizing: border-box;
    outline: none;
    border: 1px solid lightgray;
    border-radius: 3px;
    padding: 10px 10px 10px 100px;
    transition: all 0.1s ease-out;
  }
  .text-input input[type="text"] + label {
    position: absolute;
    top: 0;
    left: 0;
    bottom: 0;
    height: 40px;
    line-height: 40px;
    color: white;
    border-radius: 3px 0 0 3px;
    padding: 0 20px;
    background: #E03616;
    -webkit-transform: translateZ(0) translateX(0);
            transform: translateZ(0) translateX(0);
    transition: all 0.3s ease-in;
    transition-delay: 0.2s;
  }
  .text-input input[type="text"]:focus + label {
    -webkit-transform: translateY(-120%) translateX(0%);
            transform: translateY(-120%) translateX(0%);
    border-radius: 3px;
    transition: all 0.1s ease-out;
  }
  .text-input input[type="text"]:focus {
    padding: 10px;
    transition: all 0.3s ease-out;
    transition-delay: 0.2s;
  }
  
  
  
  
  
  
  
  


<div class="container">
    <br>
    <br>
    <div class="card">
       <div class="card-body">
          <div class="row">
              <div class="text-input">
                  <form name="form" #f="ngForm" class="full-width"  novalidate>
                    <input type="text" id="input1" name="firstName" [(ngModel)]="searchText" #firstName="ngModel" minlength="1" [ngClass]="{ 'is-invalid': f.submitted && firstName.invalid }" autocomplete="off" required  placeholder="Search for a employee by name">
                    <label for="input1">Name</label>
                </form>
                </div>
             <!-- Show search results here as ordered list -->
             <ng-container *ngIf='firstName.dirty && searchText.length > 0'>
                <table class="emp-table">
                   <thead>
                      <tr>
                         <th>Name</th>
                         <th>ID</th>
                      </tr>
                   </thead>
                   <tbody>
                      <tr *ngFor="let emp of emplyees |filter:searchText">
                         <td>{{emp.name}}</td>
                         <td>{{emp.id}}</td>
                      </tr>
                   </tbody>
                </table>
             </ng-container>
          </div>
       </div>
    </div>
 </div>





  emplyees = [
    { id: 101, name: 'Akash' },
    { id: 102, name: 'Selva' },
    { id: 103, name: 'Lokesh'},
    { id: 104, name: 'Vicky' },
    { id: 105, name: 'Akash' },
    { id: 106, name: 'Tamri' },
    { id: 107, name: 'Mani'  },
    { id: 108, name: 'Selva' },
    { id: 109, name: 'Selva' },
    { id: 110, name: 'Vicky' },
    { id: 111, name: 'selva' }
  ];
